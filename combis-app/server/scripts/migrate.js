const { Client } = require('pg');
require('dotenv').config();

async function migrate() {
  const client = new Client({
    connectionString: process.env.DATABASE_URL,
    ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
  });

  try {
    await client.connect();
    console.log('üìä Connexion √† la base de donn√©es r√©ussie');

    // V√©rifier si les tables existent d√©j√†
    const result = await client.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' AND table_name = 'membres'
    `);

    if (result.rows.length === 0) {
      console.log('üèóÔ∏è  Cr√©ation du sch√©ma initial...');
      
      // Ex√©cuter le sch√©ma de base
      const fs = require('fs');
      const path = require('path');
      
      const schemaPath = path.join(__dirname, '..', '..', 'database', 'schema.sql');
      if (fs.existsSync(schemaPath)) {
        const schema = fs.readFileSync(schemaPath, 'utf8');
        await client.query(schema);
        console.log('‚úÖ Sch√©ma de base cr√©√©');
      }

      // Ex√©cuter le sch√©ma des fonctionnalit√©s avanc√©es
      const advancedPath = path.join(__dirname, '..', '..', 'database', 'advanced_features.sql');
      if (fs.existsSync(advancedPath)) {
        const advanced = fs.readFileSync(advancedPath, 'utf8');
        await client.query(advanced);
        console.log('‚úÖ Fonctionnalit√©s avanc√©es install√©es');
      }

      console.log('üéâ Migration termin√©e avec succ√®s!');
    } else {
      console.log('‚úÖ Base de donn√©es d√©j√† initialis√©e');
    }

  } catch (error) {
    console.error('‚ùå Erreur de migration:', error);
    process.exit(1);
  } finally {
    await client.end();
  }
}

if (require.main === module) {
  migrate();
}

module.exports = migrate;